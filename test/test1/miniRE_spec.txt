%% Tokens   /* This section specifies a list of  all the tokens or terminals used in the grammar  separated by spacing*/

%% Start  /* This section specifies the start symbol of the grammar */

<MiniRE-program>

%% Rules  /* This section specifies the rules – non terminals are enclosed in < > - BNF notation is used */

<MiniRE-program> -->  begin <statement-list> end
<statement-list> -->  <statement><statement-list-tail> 
<statement-list-tail> --> <statement><statement-list-tail>  | @
<statement> --> ID = <exp> ;
<statement> --> ID = # <exp> ; 
<statement> --> ID = maxfreqstring (ID);
<statement> --> replace REGEX with ASCII-STR in  <file-names> ;
<statement> --> recursivereplace REGEX with ASCII-STR in  <file-names> ;
<file-names> -->  <source-file>  >!  <destination-file>
<source-file> -->  ASCII-STR  
<destination-file> --> ASCII-STR
<statement> --> print ( <exp-list> ) ;
<exp-list> --> <exp> <exp-list-tail>
<exp-list-tail> --> , <exp> <exp-list-tail>
<exp> --> ID  | ( <exp> ) 
<exp> --> <term> <exp-tail>
<exp-tail> -->  <bin-op> <term> <exp-tail> 
<exp-tail> --> @
<term > --> find REGEX in  <file-name>  
<file-name> --> ASCII-STR
<bin-op> -->  diff | union | inters
